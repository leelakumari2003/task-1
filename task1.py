# -*- coding: utf-8 -*-
"""task1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mvYluuIWPm9gLFP2c_vpCC8GWNMhJVwA
"""

import numpy as np
import pandas as pd

import matplotlib.pyplot as plt
import seaborn as sns

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline

df=pd.read_csv(r'/content/houserent.csv')
df.head()

df.columns

sns.pairplot(df)

data1=df.dropna()
data1

sns.displot(data1['Rent'],kde=True)

df.corr(numeric_only=True)

sns.heatmap(df.corr(numeric_only=True),annot=True)

x=data1[['BHK','Size','Bathroom']]

y=data1['Rent']

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.4,random_state=101)

from sklearn.linear_model import LinearRegression
lm=LinearRegression()
lm.fit(x_train,y_train)

print(lm.intercept_)

lm.coef_

x_train.columns

cdf=pd.DataFrame(lm.coef_,x.columns,columns=['Coeff'])

predictions=lm.predict(x_test)

predictions

y_test

plt.scatter(y_test,predictions)

sns.displot((y_test-predictions),kde=True)

from sklearn import metrics
print('MAE: ',metrics.mean_absolute_error(y_test,predictions))
print('MSE: ',metrics.mean_squared_error(y_test,predictions))
print('RMSE: ',np.sqrt(metrics.mean_squared_error(y_test,predictions)))

input_data=(1,1000,2)
input_data_numpy=np.asarray(input_data)
input_data_reshaped=input_data_numpy.reshape(1,-1)
prediction=lm.predict(input_data_reshaped)
print("Predicted price:",prediction[0])